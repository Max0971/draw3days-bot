import os
import logging
from flask import Flask, request
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—ñ–≤
logging.basicConfig(format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO)

# –¢–æ–∫–µ–Ω –∑ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ Render
TOKEN = os.getenv("BOT_TOKEN")
RENDER_EXTERNAL_HOSTNAME = os.getenv("RENDER_EXTERNAL_HOSTNAME")  # –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø—ñ–¥—Å—Ç–∞–≤–ª—è—î—Ç—å—Å—è Render'–æ–º

# Flask —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
flask_app = Flask(__name__)

# Telegram Application
telegram_app = Application.builder().token(TOKEN).build()

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! –Ø –ø—Ä–∞—Ü—é—é —è–∫ Telegram-–±–æ—Ç —á–µ—Ä–µ–∑ Render üåê")

telegram_app.add_handler(CommandHandler("start", start))

# Webhook endpoint –¥–ª—è Telegram
@flask_app.route(f"/{TOKEN}", methods=["POST"])
async def webhook():
    update_data = request.get_json(force=True)
    update = Update.de_json(update_data, telegram_app.bot)
    await telegram_app.process_update(update)
    return "ok"

# –ì–æ–ª–æ–≤–Ω–∞ —Ç–æ—á–∫–∞ –≤—Ö–æ–¥—É
if __name__ == "__main__":
    import asyncio

    async def run():
        webhook_url = f"https://{RENDER_EXTERNAL_HOSTNAME}/{TOKEN}"
        logging.info(f"–í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ webhook –∑–∞ –∞–¥—Ä–µ—Å–æ—é: {webhook_url}")
        await telegram_app.bot.set_webhook(webhook_url)
        await telegram_app.initialize()
        await telegram_app.start()

    asyncio.run(run())

    port = int(os.environ.get("PORT", 10000))
    flask_app.run(host="0.0.0.0", port=port)
